######## templates/votes-api.yaml - BACKEND
apiVersion: apps/v1
kind: Deployment
metadata:
  name: votes-api-deployment
  labels:
    app: votes-api
spec:
  replicas: {{ .Values.votesApi.replicas }}
  selector:
    matchLabels:
      app: votes-api
  template:
    metadata:
      labels:
        app: votes-api
    spec:
      containers:
      - name: votes-api
        image: {{ .Values.votesApi.image.repository }}:{{ .Values.votesApi.image.tag }}
        imagePullPolicy: {{ .Values.votesApi.image.pullPolicy }}
        ports:
        - containerPort: 80
          name: http
        env:
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: host
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database
        - name: OPTION_A
          value: {{ .Values.votesApi.env.OPTION_A | quote }}
        - name: OPTION_B
          value: {{ .Values.votesApi.env.OPTION_B | quote }}
        - name: PORT
          value: {{ .Values.votesApi.env.PORT | quote }}
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: votes-api-service
spec:
  selector:
    app: votes-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
